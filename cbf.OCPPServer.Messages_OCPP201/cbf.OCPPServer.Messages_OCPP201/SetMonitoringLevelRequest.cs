//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace cbf.OCPPServer.Messages_OCPP201
{
    using System = global::System;

    



    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v12.0.0.0))")]
    public partial class SetMonitoringLevelRequest
    {
        [Newtonsoft.Json.JsonProperty("customData", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CustomDataType CustomData { get; set; }

        /// <summary>
        /// The Charging Station SHALL only report events with a severity number lower than or equal to this severity.
        /// <br/>The severity range is 0-9, with 0 as the highest and 9 as the lowest severity level.
        /// <br/>
        /// <br/>The severity levels have the following meaning: +
        /// <br/>*0-Danger* +
        /// <br/>Indicates lives are potentially in danger. Urgent attention is needed and action should be taken immediately. +
        /// <br/>*1-Hardware Failure* +
        /// <br/>Indicates that the Charging Station is unable to continue regular operations due to Hardware issues. Action is required. +
        /// <br/>*2-System Failure* +
        /// <br/>Indicates that the Charging Station is unable to continue regular operations due to software or minor hardware issues. Action is required. +
        /// <br/>*3-Critical* +
        /// <br/>Indicates a critical error. Action is required. +
        /// <br/>*4-Error* +
        /// <br/>Indicates a non-urgent error. Action is required. +
        /// <br/>*5-Alert* +
        /// <br/>Indicates an alert event. Default severity for any type of monitoring event.  +
        /// <br/>*6-Warning* +
        /// <br/>Indicates a warning event. Action may be required. +
        /// <br/>*7-Notice* +
        /// <br/>Indicates an unusual event. No immediate action is required. +
        /// <br/>*8-Informational* +
        /// <br/>Indicates a regular operational event. May be used for reporting, measuring throughput, etc. No action is required. +
        /// <br/>*9-Debug* +
        /// <br/>Indicates information useful to developers for debugging, not useful during operations.
        /// <br/>
        /// <br/>
        /// <br/>
        /// </summary>
        [Newtonsoft.Json.JsonProperty("severity", Required = Newtonsoft.Json.Required.Always)]
        public int Severity { get; set; }

    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603